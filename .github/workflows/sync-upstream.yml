name: Sync with upstream

on:
  schedule:
    # Run every Sunday at 2 AM UTC
    - cron: '0 2 * * 0'
  workflow_dispatch:
    # Allow manual triggering

concurrency:
  group: sync-upstream
  cancel-in-progress: true

jobs:
  sync:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v5

    - name: Set up JDK 8
      uses: actions/setup-java@v5
      with:
        java-version: 8
        distribution: 'temurin'

    - name: Download latest domains.json from upstream
      run: |
        # Get the current file
        cp src/main/resources/domains.json domains.json.old

        # Download the latest version
        curl -o src/main/resources/domains.json.new \
          https://raw.githubusercontent.com/Kikobeats/free-email-domains/master/domains.json

        # Check if there are differences
        if ! cmp -s domains.json.old src/main/resources/domains.json.new; then
          echo "DOMAINS_CHANGED=true" >> $GITHUB_ENV
          mv src/main/resources/domains.json.new src/main/resources/domains.json

          # Count domains for the commit message
          OLD_COUNT=$(jq length domains.json.old)
          NEW_COUNT=$(jq length src/main/resources/domains.json)
          DIFF=$((NEW_COUNT - OLD_COUNT))
          echo "OLD_COUNT=$OLD_COUNT" >> $GITHUB_ENV
          echo "NEW_COUNT=$NEW_COUNT" >> $GITHUB_ENV
          echo "DIFF=$DIFF" >> $GITHUB_ENV

          echo "Domains updated: $OLD_COUNT -> $NEW_COUNT (diff: $DIFF)"
        else
          echo "DOMAINS_CHANGED=false" >> $GITHUB_ENV
          echo "No changes detected in domains.json"
          rm src/main/resources/domains.json.new
        fi

        rm domains.json.old

    - name: Regenerate DomainsData.java
      if: env.DOMAINS_CHANGED == 'true'
      run: |
        echo "Regenerating DomainsData.java with updated domains..."
        if ! python3 generate-domains.py; then
          echo "Error: Failed to regenerate DomainsData.java"
          exit 1
        fi
        echo "DomainsData.java regenerated successfully"

    - name: Run tests to verify update
      if: env.DOMAINS_CHANGED == 'true'
      run: mvn clean test

    - name: Create Pull Request
      if: env.DOMAINS_CHANGED == 'true'
      uses: peter-evans/create-pull-request@v7
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: |
          Update domains.json from upstream

          Synced with Kikobeats/free-email-domains
          Domain count: ${{ env.OLD_COUNT }} -> ${{ env.NEW_COUNT }} (${{ env.DIFF }})
        title: 'Update domains.json from upstream'
        body: |
          ## Automatic upstream sync

          This PR updates the domains.json file with the latest changes from the upstream [free-email-domains](https://github.com/Kikobeats/free-email-domains) repository.

          **Changes:**
          - Domain count: ${{ env.OLD_COUNT }} → ${{ env.NEW_COUNT }}
          - Difference: ${{ env.DIFF }} domains

          **Tests:** ✅ All tests pass with the updated domain list

          This PR will be automatically merged if all checks pass.
        branch: update-domains-${{ github.run_number }}
        delete-branch: true

    - name: Auto-merge PR if tests pass
      if: env.DOMAINS_CHANGED == 'true'
      run: |
        # Get the PR number
        PR_NUMBER=$(gh pr list --head update-domains-${{ github.run_number }} --json number --jq '.[0].number')

        if [ -n "$PR_NUMBER" ]; then
          echo "Found PR #$PR_NUMBER, waiting for checks to complete..."

          # Wait for checks to complete with timeout
          if gh pr checks $PR_NUMBER --fail-after-seconds 300; then
            echo "All checks passed, auto-merging PR #$PR_NUMBER"
            gh pr merge $PR_NUMBER --merge --delete-branch
            echo "PR #$PR_NUMBER auto-merged successfully"
          else
            echo "PR #$PR_NUMBER has failing checks or timed out, manual review required"
            exit 1
          fi
        else
          echo "Could not find PR for branch update-domains-${{ github.run_number }}"
          exit 1
        fi
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Trigger release workflow
      if: env.DOMAINS_CHANGED == 'true'
      uses: actions/github-script@v7
      with:
        script: |
          // Wait a bit for the merge to complete
          await new Promise(resolve => setTimeout(resolve, 10000));

          // Trigger the release workflow
          await github.rest.actions.createWorkflowDispatch({
            owner: context.repo.owner,
            repo: context.repo.repo,
            workflow_id: 'release.yml',
            ref: 'main'
          });

          console.log('Release workflow triggered');

    - name: Notify if no changes
      if: env.DOMAINS_CHANGED == 'false'
      run: echo "No changes detected in upstream domains.json - no action needed"